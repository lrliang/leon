
封装字段 (Encapsulate Field)
描述：将公有字段变为私有，并提供访问器（getter）和修改器（setter）。
目的：控制对字段的访问，增强数据封装性。
使用场景：当需要限制对字段的直接访问时。
替换继承为委托 (Replace Inheritance with Delegation)
描述：用委托关系替换继承关系，即让一个类持有另一个类的实例，并将调用转发给该实例。
目的：减少类之间的耦合，提高代码的灵活性。
使用场景：当继承关系过于复杂或不适合时。
替换委托为继承 (Replace Delegation with Inheritance)
描述：将委托关系转换为继承关系，即让一个类继承另一个类，并重写必要的方法。
目的：简化代码结构，提高代码的可扩展性。
使用场景：当委托关系导致代码过于复杂时。
引入工厂方法 (Introduce Factory Method)
描述：创建一个工厂方法来负责对象的创建，而不是直接使用构造函数。
目的：提高代码的灵活性和可测试性，便于扩展和维护。
使用场景：当对象的创建逻辑较为复杂或可能发生变化时。